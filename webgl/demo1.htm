<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Première démo</title>
	<script src="https://threejs.org/build/three.min.js"></script>
	<style>
		body { margin: 0; padding: 0; }
		canvas { width: 100%; height: 100%; }
	</style>
</head>
<body>
<script>
	var WIDTH = window.innerWidth;
	var HEIGHT = window.innerHeight;
	var scene, renderer,camera;
	const PI=Math.PI;
	
	function render() {
		requestAnimationFrame(render);
		renderer.render(scene, camera);
	}
	
	function prepareScene () {
		renderer = new THREE.WebGLRenderer({antialias:true});
		renderer.setSize(WIDTH, HEIGHT);
		renderer.setClearColor(0xFFFFFF, 1); // FFFFFF c'est blanc, le fond de la scène sera blanc
		document.body.appendChild(renderer.domElement);

		scene = new THREE.Scene();

		camera = new THREE.PerspectiveCamera(70, WIDTH/HEIGHT);
		camera.position.z = 50;
		scene.add(camera);
		
		lumiereAmbiante = new THREE.AmbientLight( 0x777777 ); // lumière blanche 
		scene.add( lumiereAmbiante );
		
		lumiereDirectionnelle = new THREE.DirectionalLight( 0xffffff,1 );
		lumiereDirectionnelle.position.set(100,300,200);
		scene.add( lumiereDirectionnelle );
	}
	
	function peupleScene () {
		var geometrieCube = new THREE.BoxGeometry(10, 10, 10); // 10 unités pour chaque côté
		var materiauRouge = new THREE.MeshStandardMaterial({color:"red"});
		var materiauBleu = new THREE.MeshStandardMaterial({color:"blue"});
		var materiauKaki = new THREE.MeshStandardMaterial({color:0xF0E68C}); // j'ai tapé couleur kaki dans google pour avoir la valeur
		
		cube1 = new THREE.Mesh(geometrieCube, materiauRouge);
		scene.add(cube1);
		cube1.position.set(0,0,0); // position en x y et z => x y et z. 0,0,0 c'est le centre de la scène
		
		cube2 = new THREE.Mesh(geometrieCube, materiauBleu);
		scene.add(cube2);
		cube2.position.set(40,10,0); // x va vers la droite, y vers le haut, z vers ... l'humain derrière son clavier
		cube2.scale.set(0.5, 0.5, 0.5); // on change l'échelle de ce cube sur les 3 axes
		
		cube3 = new THREE.Mesh(geometrieCube, materiauKaki);
		scene.add(cube3);
		cube3.position.set(10,20,0);
		cube3.rotation.set(0, PI/6, 0); // on fait tourner le cube de PI/6 radians sur l'axe y
		
		var geometrieSphere = new THREE.SphereGeometry(10,32,32); // 10 unités de rayon , 32 32 c'est le nombre de polygones, plus le nombre est grand plus la sphère est "lisse" mais ça rame !
		boule1 = new THREE.Mesh(geometrieSphere, materiauRouge);
		scene.add(boule1);
		boule1.position.set(50,-10,-100);
		
		var geometrieSphere = new THREE.SphereGeometry(10,32,32); // 10 unités de rayon , 32 32 c'est le nombre de polygones, plus le nombre est grand plus la sphère est "lisse" mais ça rame !
		boule2 = new THREE.Mesh(geometrieSphere, materiauBleu);
		scene.add(boule2);
		boule2.position.set(100,-50,-100);
		
		var materiauTresBrillant = new THREE.MeshPhongMaterial( {  // on peut faire des matériaux très élaborés
			color: "green", // couleur de base verte
			specular: "yellow",  // couleur du reflet jaune
			shininess: 15  // la shininess règle la force du reflet direct, essayez de la changer !
		} ) 
		boule3 = new THREE.Mesh(geometrieSphere, materiauTresBrillant);
		scene.add(boule3);
		boule3.position.set(100,50,-100);
		
		var materiauVerre = new THREE.MeshPhongMaterial( {  // et même transparents
			color: 0x77FFFF, // couleur de base cyan très clair
			specular: "yellow", 
			shininess: 15,
			transparent:true, // on dit que c'est transparent
			opacity:0.5  // avec une opacité de 50%
		} ) 
		boule4 = new THREE.Mesh(geometrieSphere, materiauVerre);
		boule4.scale.set(0.5,0.5, 0.5); 
		scene.add(boule4);
		boule4.position.set(10,0,10);
		
		
		// enfin, on dit au "spot" de lumière directionnelle de "viser" le cube1 ... mais vous pouvez changer de cible
		lumiereDirectionnelle.target=cube1;
	}
	
	prepareScene();
	peupleScene();
	render();
</script>
</body>
</html>